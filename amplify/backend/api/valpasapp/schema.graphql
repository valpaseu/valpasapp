type Notifications {
  id: ID
  title: String
  notification: String
  time: AWSDateTime
  sender: String
}

type User @model @auth(rules: [{allow: groups, groups: ["Editors"], operations: [read, create, update, delete]}, {allow: owner}]) {
  id: ID!
  username: ID
  formChecked: [String]!
  timeEntries: [TimeEntries]
  Notifications: [Notifications]
}

type OnBoardingForm @model @auth(rules: [{allow: groups, groups: ["Editors"], operations: [read, create, update, delete]}, {allow: private, operations: [read]}]) {
  id: ID!
  title: String
  data: [FormItem]
}

type TimeInterval {
  duration: String
  end: AWSDateTime
  start: AWSDateTime
}

type CustomValue {
  id: ID
  value: String
  name: String
  type: String
}

type TimeEntries {
  id: ID
  billable: Boolean
  projectID: ID
  timeInterval: TimeInterval
  userID: ID
  workID: ID
}

type FormItem {
  name: String
  text: String
}
 